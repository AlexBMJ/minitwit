# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    
    env:
        TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      setup:
        build:
          context: setup/
          args:
            ELASTIC_VERSION: ${ELASTIC_VERSION}
        init: true
        volumes:
          - setup:/state:Z
        environment:
          ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
          LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
          KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
        networks:
          - elk

      elasticsearch:
        build:
          context: elasticsearch/
          args:
            ELASTIC_VERSION: ${ELASTIC_VERSION}
        volumes:
          - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
          - elasticsearch:/usr/share/elasticsearch/data:z
        ports:
          - "9200:9200"
          - "9300:9300"
        environment:
          ES_JAVA_OPTS: -Xmx256m -Xms256m
          # Bootstrap password.
          # Used to initialize the keystore during the initial startup of
          # Elasticsearch. Ignored on subsequent runs.
          ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
          # Use single node discovery in order to disable production mode and avoid bootstrap checks.
          # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
          discovery.type: single-node
        networks:
          - elk

      logstash:
        build:
          context: logstash/
          args:
            ELASTIC_VERSION: ${ELASTIC_VERSION}
        volumes:
          - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
          - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
        ports:
          - "5044:5044"
          - "5000:5000/tcp"
          - "5000:5000/udp"
          - "9600:9600"
        environment:
          LS_JAVA_OPTS: -Xmx256m -Xms256m
          LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
        networks:
          - elk
        depends_on:
          - elasticsearch

      kibana:
        build:
          context: kibana/
          args:
            ELASTIC_VERSION: ${ELASTIC_VERSION}
        volumes:
          - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
        ports:
          - "5601:5601"
        environment:
          KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
        networks:
          - elk
        depends_on:
          - elasticsearch

    networks:
      elk:
        driver: bridge

    volumes:
      setup:
      elasticsearch:

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Install dependencies
      run: yarn install
    - name: Build the project
      run: yarn run build
    - name: Run tests
      run: yarn test
    - name: Upload test code coverage to Codecov
      uses: codecov/codecov-action@v1
    - name: Check if ES lint rules are followed
      run: yarn run eslint "." --ext .ts --ext .tsx --ext .js

